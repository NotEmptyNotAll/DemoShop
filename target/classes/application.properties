
# ---- Port -----
server.port=5011
# ---- Postgres ----
spring.datasource.driverClassName =org.postgresql.Driver
spring.jpa.database=POSTGRESQL
spring.datasource.url=jdbc:postgresql://dbinstance.cg6yt1usebwx.eu-central-1.rds.amazonaws.com:5432/postgres


#Enter your username
spring.datasource.username=postgres

#Enter your password
spring.datasource.password=0508090947
#AWS properties
cloud.aws.stack.auto=false
cloud.aws.region.static=your AWS account region
cloud.aws.credentials.accessKey=AWS IAM user access key
cloud.aws.credentials.secretKey=AWS IAM user secret key

app.awsServices.bucketName=my-demo-s3-test


## MULTIPART (MultipartProperties)
spring.servlet.multipart.enabled=true
spring.servlet.multipart.file-size-threshold=2KB
spring.servlet.multipart.max-file-size=200MB
spring.servlet.multipart.max-request-size=215MB
upload.path=D:/Project/lol/demo/src/main/resources/Upload
spring.jpa.generate-ddl=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
spring.jpa.show-sql = true
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto =update
# create
# none
# update
logging.level.org.hibernate.SQL= DEBUG
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.properties.hibernate.id.new_generator_mappings=true
# Disable feature detection by this undocumented parameter. Check the org.hibernate.engine.jdbc.internal.JdbcServiceImpl.configure method for more details.
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false
# Because detection is disabled you have to set correct dialect by hand.
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect

